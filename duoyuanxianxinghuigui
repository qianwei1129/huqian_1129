clear
clc
data=xlsread('example1_3_1.xlsx');
[m,n]=size(data);
X=data(:,3:n);
Y=data(:,2);
xishu=regression(Y,X);


function xishu=regression(Y,X)
if nargin < 2                           %当输入变量个数< 2 时，提示至少需要输入两个变量
    error('至少需要两个输入参数'); 
end
[n,p]=size(X);                         %显示矩阵X的行数和列数
[n2,p2]=size(Y);                       %显示向量Y的行数和列数

if n2~=n                                %当自变量和因变量的观测值不一致时，报错        
    error('自变量与因变量观测量不统一');
end

if p2~=1                                %当因变量个数不止一个时，报错
    error('因变量个数必须为一')
end

ST = regstats(Y,X,'linear');            %调用regstats函数进行线性回归分析，返回结构体变量ST
f = ST.fstat;    % F检验相关结果
t = ST.tstat;    % t检验相关结果
varnames = strcat({'X'},num2str([1:p]'));      %把X与数字'1:p'连接起来

%方差膨胀因子计算
for i=1:p
    B=[];Xlin=[];x=[];     %定义矩阵
    x=X;
    x(:,i)=[];
    B=(([ones(n,1),x]'*[ones(n,1),x])^(-1)*[ones(n,1),x]'*X(:,i))';
    Xlin=[ones(n,1),x]*B';
    b=sum((X(:,i)-mean(X(:,i))).*(Xlin-mean(X(:,i))))/sqrt(sum((X(:,i)-mean(X(:,i))).^2)*sum((Xlin-mean(X(:,i))).^2));
    vif(i+1)=1/(1-b*b);
end

% 显示方差分析表
fprintf('------------------------------------方差分析表------------------------------------');
fprintf('\n');
fprintf('%s%7s%15s%15s%15s%12s','方差来源','自由度','平方和','均方','F值','p值');
fprintf('\n');
fmt = '%s%13.4f%17.4f%17.4f%16.4f%12.4f';
fprintf(fmt,'回归',f.dfr,f.ssr,f.ssr/f.dfr,f.f,f.pval);
fprintf('\n');
fmt = '%s%13.4f%17.4f%17.4f';
fprintf(fmt,'残差',f.dfe,f.sse,f.sse/f.dfe);
fprintf('\n');
fmt = '%s%13.4f%17.4f';
fprintf(fmt,'总计',f.dfe+f.dfr,f.sse+f.ssr);
fprintf('\n');
fprintf('\n');

% 显示判定系数等统计量
fmt = '%22s%15.4f%25s%10.4f';
fprintf(fmt,'均方根误差(Root MSE)',sqrt(ST.mse),'判定系数(R-Square)',ST.rsquare);
fprintf('\n');
fprintf(fmt,'因变量均值(Dependent Mean)',mean(Y),'调整的判定系数(Adj R-Sq)',ST.adjrsquare);
fprintf('\n');
fprintf('\n');

% 显示参数估计及t检验相关结果
fprintf('-------------------------------------------参数估计-------------------------------------------');
fprintf('\n');
fprintf('%8s%18s%15s%15s%12s%12s','变量','估计值','标准误差','t值','p值','方差膨胀因子');
fprintf('\n');
for i = 1:size(t.beta,1)
    if i == 1
        fmt = '%8s%20.4f%17.4f%17.4f%12.4f%14.4f\n';
        fprintf(fmt,'常数项',t.beta(i),t.se(i),t.t(i),t.pval(i),vif(i));
    else
        fmt = '%10s%20.4f%17.4f%17.4f%12.4f%14.4f\n';
        fprintf(fmt,varnames{i-1},t.beta(i),t.se(i),t.t(i),t.pval(i),vif(i));
    end
end
fprintf('\n');
xishu=t.beta;
end
function xishu=regression(Y,X)
if nargin < 2                           %当输入变量个数< 2 时，提示至少需要输入两个变量
    error('至少需要两个输入参数'); 
end
[n,p]=size(X);                         %显示矩阵X的行数和列数
[n2,p2]=size(Y);                       %显示向量Y的行数和列数

if n2~=n                                %当自变量和因变量的观测值不一致时，报错        
    error('自变量与因变量观测量不统一');
end

if p2~=1                                %当因变量个数不止一个时，报错
    error('因变量个数必须为一')
end

ST = regstats(Y,X,'linear');            %调用regstats函数进行线性回归分析，返回结构体变量ST
f = ST.fstat;    % F检验相关结果
t = ST.tstat;    % t检验相关结果
varnames = strcat({'X'},num2str([1:p]'));      %把X与数字'1:p'连接起来

%方差膨胀因子计算
for i=1:p
    B=[];Xlin=[];x=[];     %定义矩阵
    x=X;
    x(:,i)=[];
    B=(([ones(n,1),x]'*[ones(n,1),x])^(-1)*[ones(n,1),x]'*X(:,i))';
    Xlin=[ones(n,1),x]*B';
    b=sum((X(:,i)-mean(X(:,i))).*(Xlin-mean(X(:,i))))/sqrt(sum((X(:,i)-mean(X(:,i))).^2)*sum((Xlin-mean(X(:,i))).^2));
    vif(i+1)=1/(1-b*b);
end

% 显示方差分析表
fprintf('------------------------------------方差分析表------------------------------------');
fprintf('\n');
fprintf('%s%7s%15s%15s%15s%12s','方差来源','自由度','平方和','均方','F值','p值');
fprintf('\n');
fmt = '%s%13.4f%17.4f%17.4f%16.4f%12.4f';
fprintf(fmt,'回归',f.dfr,f.ssr,f.ssr/f.dfr,f.f,f.pval);
fprintf('\n');
fmt = '%s%13.4f%17.4f%17.4f';
fprintf(fmt,'残差',f.dfe,f.sse,f.sse/f.dfe);
fprintf('\n');
fmt = '%s%13.4f%17.4f';
fprintf(fmt,'总计',f.dfe+f.dfr,f.sse+f.ssr);
fprintf('\n');
fprintf('\n');

% 显示判定系数等统计量
fmt = '%22s%15.4f%25s%10.4f';
fprintf(fmt,'均方根误差(Root MSE)',sqrt(ST.mse),'判定系数(R-Square)',ST.rsquare);
fprintf('\n');
fprintf(fmt,'因变量均值(Dependent Mean)',mean(Y),'调整的判定系数(Adj R-Sq)',ST.adjrsquare);
fprintf('\n');
fprintf('\n');

% 显示参数估计及t检验相关结果
fprintf('-------------------------------------------参数估计-------------------------------------------');
fprintf('\n');
fprintf('%8s%18s%15s%15s%12s%12s','变量','估计值','标准误差','t值','p值','方差膨胀因子');
fprintf('\n');
for i = 1:size(t.beta,1)
    if i == 1
        fmt = '%8s%20.4f%17.4f%17.4f%12.4f%14.4f\n';
        fprintf(fmt,'常数项',t.beta(i),t.se(i),t.t(i),t.pval(i),vif(i));
    else
        fmt = '%10s%20.4f%17.4f%17.4f%12.4f%14.4f\n';
        fprintf(fmt,varnames{i-1},t.beta(i),t.se(i),t.t(i),t.pval(i),vif(i));
    end
end
fprintf('\n');
xishu=t.beta;
end
