%% 本函数包含两个函数文件zhuchengfen和reglm
%% x是自变量
%% y是因变量
clear
clc
data=xlsread('example1_2_1.xlsx');
[m,n]=size(data);
X=data(:,3:n);
Y=data(:,2);
xishu=zhuchengfen(Y,X);



function xishu=zhuchengfen(Y,X)
if nargin < 2
    error('至少需要两个输入参数');
end
[n,p]=size(X);
[n2,p2]=size(Y);

if n2~=n
    error('自变量与因变量观测量不统一');
end

if p2~=1
    error('因变量个数必须为一')
end

mx=mean(X);  %平均值
my=mean(Y);
stdx=std(X,0); %标准差
stdy=std(Y,0); 

%主成分分析
PHO=corrcoef(X);       %计算相关系数阵           
[COEFF, LATENT, EXPLAINED] = pcacov(PHO);  %主成分分析
COEFF(:,find(sum(COEFF)<0))=-COEFF(:,find(sum(COEFF)<0));
COEFF=COEFF';
Xlin=[];
for i=1:p
    Xlin(:,i)=sum(zscore(X).*COEFF(ones(n,1)*i,:),2);
end

%标准化因变量对主成分进行多元回归分析
i=input('选择主成分的个数为：');        %手动输入选取主成分的个数
jieyong=reglm(zscore(Y),Xlin(:,1:i));  %标准化因变量对主成分进行多元回归分析

%计算标准化数据的回归方程
B=[];
B=([ones(n,1),Xlin(:,1:i)]'*[ones(n,1),Xlin(:,1:i)])^(-1)*[ones(n,1),Xlin(:,1:i)]'*zscore(Y);
B2=[B(1),B(2)*COEFF(1,:)];
for j=3:i+1
    B2(2:end)=B2(2:end)+B(j)*COEFF(j-1,:);%记录标准化数据的主成分回归方程的系数
end

%还原为原始数据的回归方程
B3=[((B2(1)-sum(B2(2:end).*mx./stdx))*stdy+my)/stdy,B2(2:end)./stdx]*stdy;%记录原始数据的主成分回归方程的系数

%输出标准化数据回归方程
fprintf('\n');fprintf('\n');
fprintf('%s%1.4f','标准化数据的主成分回归方程为： Y=',B2(1));  %打印标准化数据的主成分回归方程
for i=2:p+1
    if B2(i)<0
        fprintf('%.4f%s',B2(i),strcat('*X',num2str(i-1)));
    else
        fprintf('%s%1.4f%s','+',B2(i),strcat('*X',num2str(i-1)));
    end
end

%输出原始数据回归方程
fprintf('\n');
fprintf('%s%1.4f','原始数据的主成分回归方程为： y=',B3(1)); %打印原始数据的主成分回归方程
for i=2:p+1
    if B3(i)<0
        fprintf('%.4f%s',B3(i),strcat('*x',num2str(i-1)));
    else
        fprintf('%s%1.4f%s','+',B3(i),strcat('*x',num2str(i-1)));
        
    end
end
fprintf('\n');
xishu=B3;
end



function stats = reglm(y,X,model,varnames)
% 多重线性回归分析或广义线性回归分析
%
%   reglm(y,X)，产生线性回归分析的方差分析表和参数估计结果，并以表格形式显示在屏幕上. 参
%   数X是自变量观测值矩阵，它是n行p列的矩阵. y是因变量观测值向量，它是n行1列的列向量.
%
%   stats = reglm(y,X)，还返回一个包括了回归分析的所有诊断统计量的结构体变量stats.
%
%   stats = reglm(y,X,model)，用可选的model参数来控制回归模型的类型. model是一个字符串，
%   其可用的字符串如下
%       'linear'          带有常数项的线性模型（默认情况）
%       'interaction'     带有常数项、线性项和交叉项的模型
%       'quadratic'       带有常数项、线性项、交叉项和平方项的模型
%       'purequadratic'   带有常数项、线性项和平方项的模型
%
%   stats = reglm(y,X,model,varnames)，用可选的varnames参数指定变量标签. varnames
%   可以是字符矩阵或字符串元胞数组，它的每行的字符或每个元胞的字符串是一个变量的标签，它的行
%   数或元胞数应与X的列数相同. 默认情况下，用X1,X2,…作为变量标签.

if nargin < 2
   error('至少需要两个输入参数');
end
p = size(X,2);    % X的列数，即变量个数
if nargin < 3 || isempty(model)
   model = 'linear';    % model参数的默认值
end

% 生成变量标签varnames
if nargin < 4 || isempty(varnames)
    varname1 = strcat({'Z'},num2str([1:p]'));
    varnames = makevarnames(varname1,model);    % 默认的变量标签
else
    if ischar(varnames)
        varname1 = cellstr(varnames);
    elseif iscell(varnames)
        varname1 = varnames(:);
    else
        error('varnames 必须是字符矩阵或字符串元胞数组');
    end
    if size(varname1,1) ~= p
        error('变量标签数与X的列数不一致');
    else
        varnames = makevarnames(varname1,model);    % 指定的变量标签
    end
end

ST = regstats(y,X,model);    % 调用regstats函数进行线性回归分析，返回结构体变量ST
f = ST.fstat;    % F检验相关结果
t = ST.tstat;    % t检验相关结果

% 显示方差分析表
fprintf('\n');
fprintf('------------------------------------方差分析表------------------------------------');
fprintf('\n');
fprintf('%s%7s%15s%15s%15s%12s','方差来源','自由度','平方和','均方','F值','p值');
fprintf('\n');
fmt = '%s%13.4f%17.4f%17.4f%16.4f%12.4f';
fprintf(fmt,'回归',f.dfr,f.ssr,f.ssr/f.dfr,f.f,f.pval);
fprintf('\n');
fmt = '%s%13.4f%17.4f%17.4f';
fprintf(fmt,'残差',f.dfe,f.sse,f.sse/f.dfe);
fprintf('\n');
fmt = '%s%13.4f%17.4f';
fprintf(fmt,'总计',f.dfe+f.dfr,f.sse+f.ssr);
fprintf('\n');
fprintf('\n');

% 显示判定系数等统计量
fmt = '%22s%15.4f%25s%10.4f';
fprintf(fmt,'均方根误差(Root MSE)',sqrt(ST.mse),'判定系数(R-Square)',ST.rsquare);
fprintf('\n');
fprintf(fmt,'因变量均值(Dependent Mean)',mean(y),'调整的判定系数(Adj R-Sq)',ST.adjrsquare);
fprintf('\n');
fprintf('\n');

% 显示参数估计及t检验相关结果
fprintf('-----------------------------------参数估计-----------------------------------');
fprintf('\n');
fprintf('%8s%18s%15s%15s%12s','变量','估计值','标准误','t值','p值');
fprintf('\n');
for i = 1:size(t.beta,1)
    if i == 1
        fmt = '%8s%20.4f%17.4f%17.4f%12.4f\n';
        fprintf(fmt,'常数项',t.beta(i),t.se(i),t.t(i),t.pval(i));
    else
        fmt = '%10s%20.4f%17.4f%17.4f%12.4f\n';
        fprintf(fmt,varnames{i-1},t.beta(i),t.se(i),t.t(i),t.pval(i));
    end
end

if nargout == 1
    stats = ST;    % 返回一个包括了回归分析的所有诊断统计量的结构体变量
end

% -----------------子函数-----------------------
function varnames = makevarnames(varname1,model)
% 生成指定模型的变量标签
p = size(varname1,1);
varname2 = [];
for i = 1:p-1
    varname2 = [varname2;strcat(varname1(i),'*',varname1(i+1:end))];
end
varname3 = strcat(varname1,'*',varname1);
switch model
    case 'linear'
        varnames = varname1;
    case 'interaction'
        varnames = [varname1;varname2];
    case 'quadratic'
        varnames = [varname1;varname2;varname3];
    case 'purequadratic'
        varnames = [varname1;varname3];
end
